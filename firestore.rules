rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Polls collection
    match /polls/{pollId} {
      // Allow reading polls
      allow read: if true;
      
      // Allow creating polls if user is authenticated
      allow create: if request.auth != null;
      
      // Allow updating polls if user is the creator
      allow update: if request.auth != null && (
        resource.data.createdBy == request.auth.uid || 
        // Allow voting by updating only specific fields
        (
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['voters', 'options', 'lastVoteAt']) &&
          !resource.data.voters.hasAny([request.auth.uid])
        )
      );
      
      // Allow deleting polls if user is the creator
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();  // Any authenticated user can read
      allow write: if isOwner(userId);   // Only owner can write their data
    }

    // Votes collection
    match /votes/{voteId} {
      allow read: if true;  // Anyone can read votes
      allow create: if isAuthenticated();  // Must be logged in to vote
      allow update, delete: if false;  // Votes cannot be modified or deleted
    }

    // Analytics collection
    match /analytics/{docId} {
      allow read: if isAuthenticated() && resource.data.createdBy == request.auth.uid;  // Only poll owners can read analytics
      allow write: if false;  // Analytics are written by server only
    }
  }
}
